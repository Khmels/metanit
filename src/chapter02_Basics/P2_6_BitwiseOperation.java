package chapter02_Basics;

public class P2_6_BitwiseOperation {
    public static void main(String[] args) {
        byte b = 7;     // 0000 0111
        short s = 7;    // 0000 0000 0000 0111

        //  & (логическое умножение)
        int a1 = 2; //010
        int b1 = 5;//101
        System.out.println(a1&b1); // результат 0

        int a2 = 4; //100
        int b2 = 5; //101
        System.out.println(a2 & b2); // результат 4

        int bitmask = 0x000F;
        int val = 0x2222;
        // prints "2"
        System.out.println(val & bitmask);

        System.out.println("---------------------");

        //  | (логическое сложение)
        int a3 = 2; //010
        int b3 = 5;//101
        System.out.println(a3|b3); // результат 7 - 111

        int a4 = 4; //100
        int b4 = 5;//101
        System.out.println(a4 | b4); // результат 5 - 101

        System.out.println("---------------------");

        // ^ (логическое исключающее ИЛИ)  = XOR
        int number = 45;            // 1001 Значение, которое надо зашифровать - в двоичной форме 101101
        int key = 102;              //Ключ шифрования - в двоичной системе 1100110
        int encrypt = number ^ key; //Результатом будет число 1001011 или 75
        System.out.println("Зашифрованное число: " +encrypt);

        int decrypt = encrypt ^ key; // Результатом будет исходное число 45
        System.out.println("Расшифрованное число: " + decrypt);

        System.out.println("---------------------");

        // ~ (логическое отрицание)
        byte a = 12;                 // 0000 1100
        System.out.println(~a);     //  1111 0011   или -13

        System.out.println("---------------------");

        // --- Операции сдвига ---  //Bit Shift Operators
        /*
        a<<b - сдвигает число a влево на b разрядов.
        a>>b - смещает число a вправо на b разрядов. Например,
        a>>>b - в отличие от предыдущих типов сдвигов данная операция представляет беззнаковый сдвиг - сдвигает число a вправо на b разрядов. Например, выражение -8>>>2 будет равно 1073741822.
         */

        int g = 4;
        int h = 1;
        int j = -4;
        int k = -8;
        int l = 2;


        System.out.println(g<<h);
        //        4<<1 сдвигает число 4 (которое в двоичном представлении 100) на один разряд влево,
        //        в результате получается число 1000 или число 8 в десятичном представлении.

        System.out.println(g>>h);
        //        16>>1 сдвигает число 16 (которое в двоичной системе 10000) на один разряд вправо,
        //        то есть в итоге получается 1000 или число 8 в десятичном представлении.

        //если исходное число, которое надо сдвинуть в ту или другую сторону, делится на два, то фактически получается умножение или деление на два.

        //a>>>b - в отличие от предыдущих типов сдвигов данная операция представляет беззнаковый сдвиг - сдвигает число a вправо на b разрядов. Например, выражение -8>>>2 будет равно 1073741822.
        int res = j>>>h;
        int res2 = k>>>g;
        int res3 = k>>>l;
        System.out.println(res + ", " + res2+ ", " + res3);
    }
}
